name: "CI/CD pull request"

on:
  push:
    branches:
      - "**"
    paths-ignore:
      - "date"
  pull_request:
    types: [opened, reopened]

permissions:
  contents: read

jobs:
  auto:
    runs-on: ubuntu-latest
    steps:
      - name: "Generate GitHub App token"
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - name: "Mask GitHub App token"
        run: echo "::add-mask::${{ steps.app-token.outputs.token }}"
      - name: "Checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}
          ref: ${{ github.head_ref }}
          persist-credentials: false
      - name: "Import commit signing key"
        env:
          BOT_NAME: ${{ vars.GIT_SIGN_BOT_NAME }}
          BOT_EMAIL: ${{ vars.GIT_SIGN_BOT_EMAIL }}
          BOT_GPG_PKEY: ${{ secrets.GIT_SIGN_BOT_GPG_PRIVATE_KEY }}
          BOT_GPG_PASS: ${{ secrets.GIT_SIGN_BOT_GPG_PASSPHRASE }}
        run: |
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          export GPG_TTY=$(tty)
          echo "$BOT_GPG_PKEY" | gpg --batch --import
          key_id=$(gpg --batch --list-secret-keys --with-colons | awk -F: '/^sec:/ {print $5; exit}')
          git config --global user.name "$BOT_NAME"
          git config --global user.email "$BOT_EMAIL"
          git config --global user.signingkey "$key_id"
          git config --global gpg.program gpg
          git config --global commit.gpgsign true
          git config --global tag.gpgSign true
          if [ -n "$BOT_GPG_PASS" ]; then
            gpgconf --kill gpg-agent || true
            gpgconf --launch gpg-agent || true
            echo "warmup" | gpg --batch --yes --passphrase "$BOT_GPG_PASS" --pinentry-mode loopback --sign >/dev/null 2>&1 || true
          fi
      - name: "Write date file"
        run: |
          datetime=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo "$datetime" > date
          cat date
      - name: "Commit and push date file"
        env:
          APP_TOKEN: ${{ steps.app-token.outputs.token }}
          BOT_GPG_PASS: ${{ secrets.GIT_SIGN_BOT_GPG_PASSPHRASE }}
        run: |
          git add date
          git commit -S -m "chore: update date file"
          target_branch="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          git push \
            "https://x-access-token:${APP_TOKEN}@github.com/${{ github.repository }}.git" \
            "HEAD:${target_branch}"
